version: v1beta
variable:
  document-page-images:
    title: Document Page Images
    description: Document whole page images
    type: array:image
component:
  batch-images:
    type: collection
    input:
      data: ${variable.document-page-images}
      size: 2
    task: TASK_SPLIT
  vlm-document-ocr:
    type: iterator
    range:
      start: 0
      stop: ${batch-images.output.data:length}
    component:
      document-ocr:
        type: openai
        task: TASK_TEXT_GENERATION
        input:
          model: gpt-4o
          images: ${batch-images.output.data[i]}
          n: 1
          prompt: |-
            Use the provided document images to perform OCR and output the extracted text in Markdown format. Structure the content accurately based on headings, paragraphs, lists, tables, and other elements observed in the images. Ensure a high level of faithfulness to the text and layout in the image.

            Requirements:

            1. Text and Structure:
              Extract all visible text accurately.
              Use Markdown to format headings (\# for titles, \## and \### for subtitles), lists, and paragraphs. Ensure consistent indentation for lists and sublists.
              Apply inline formatting like bold or italics where appropriate.
            2. Tables:
              If tables are present, structure them using Markdown syntax, with pipes (|) for columns and dashes (---) for separating headers.
              Ensure all table rows and columns are included, aligning accurately with the images.
            3. Images and Descriptions:
              For any images within the document, include concise descriptions of the content or purpose of the image based on visual cues.
            4. Accuracy and Completeness:
              Extract and include all text elements, including side notes or captions, while maintaining logical flow and organization.
              Avoid omitting any content or adding speculative information.

            Finally, make sure that the Markdown text contains detailed descriptions of each image, diagram or graph.

            Just output the Markdown text directly, without additional explanations or code block symbols (e.g., ```):
          response-format:
            type: text
          system-message: |-
            You are an OCR system tasked with accurately extracting and formatting document text from an images into Markdown. Capture all visible text and structure it logically, ensuring the final Markdown format mirrors the original content without additions or omissions.

            Instructions:

            1. Extract text exactly as seen in the images and organize it using Markdown formatting.
            2. Properly structure headings, lists, and paragraphs based on document layout.
            3. Format tables with Markdown syntax, ensuring all rows and columns are represented.
            4. Include alternative text descriptions for any images, focusing on concise summaries.
            5. Return only the extracted Markdown text. Do NOT output any code block symbols (```) and header/footer of each page.
          temperature: 0
          top-p: 0.01
    output-elements:
      result: ${document-ocr.output.texts[0]}
  merge-markdown-ocr:
    type: json
    input:
      json-value: ${vlm-document-ocr.output.result}
      jq-filter: join("")
    task: TASK_JQ
output:
  converted-markdown:
    title: Converted Markdown
    value: ${merge-markdown-ocr.output.results[0]}
