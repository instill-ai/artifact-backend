version: v1beta
variable:
  context:
    title: Context
    description: Converted markdown from file or document
    type: string
  file_type:
    title: File Type
    description: One of document
    type: string
  llm_model:
    title: OpenAI LLM model
    description: OpenAI model e.g., gpt-4o-mini
    type: string
component:
  chunk-text:
    type: text
    task: TASK_CHUNK_TEXT
    input:
      text: ${variable.context}
      strategy:
        setting:
          chunk-size: 100000
          chunk-overlap: 1
          model-name: gpt-4
          chunk-method: Markdown
          code-blocks: true
  map-chunks:
    type: iterator
    input: ${chunk-text.output.text-chunks}
    component:
      summarise:
        type: openai
        task: TASK_TEXT_GENERATION
        input:
          model: ${variable.llm_model} #gpt-4o-mini
          n: 1
          prompt: |-
            You are an expert at analyzing and summarizing file content. Use the provided text to create a concise and insightful summary that highlights the most important aspects of the file.

            **Input Text:**
            ```
            ${map-chunks.element}
            ```

            **Instructions:**
            - Read and understand the content to identify the file's purpose and structure.
            - Extract the key themes, critical details, and unique insights present in the text.
            - Phrase the summary in terms of the file's content (e.g., "This ${variable.file_type} file contains..." or "This ${variable.file_type} file represents...").
            - Ensure the summary is between **5 to 10 sentences**, avoids unnecessary repetition, and provides value to the user.
            - The summary must be shorter and more concise than the input text.
          response-format:
            type: text
          system-message: |-
            Your task is to summarize the content of the file. Follow these steps:

            1. **Understand the Content**: Carefully analyze the provided text to determine its purpose, structure, and main themes.
            2. **Highlight Key Details**: Extract and prioritize the most critical and insightful information from the file.
            3. **Eliminate Redundancy**: Remove less relevant or repetitive details while ensuring completeness.
            4. **Write the Summary**: Summarize the file content concisely, using phrases like "This ${variable.file_type} file contains..." to describe its content.
            5. **Refine for Clarity**: Ensure the summary is logically structured, clear, and useful to the user.
          temperature: 0
          top-p: 0.95
    output-elements:
      result: ${summarise.output.texts[0]}
  reduce:
    type: openai
    task: TASK_TEXT_GENERATION
    input:
      model: ${variable.llm_model} # gpt-4o-mini
      n: 1
      prompt: |-
        You are tasked with aggregating multiple summaries into a single, coherent overview that represents the file's content.

        **Summaries to Aggregate:**
        ```
        ${map-chunks.output.result}
        ```

        **Instructions:**
        - Use a step-by-step approach to merge the summaries cohesively and logically.
        - Ensure the final summary captures the most critical aspects of the file and provides an insightful overview.
        - Use phrases like "This ${variable.file_type} file contains..." or "This ${variable.file_type} file represents..." to refer to the content.
        - Eliminate redundancy, maintain a logical flow, and keep the overview concise (5 to 10 sentences).
      response-format:
        type: text
      system-message: |-
        Follow these steps to create an aggregated summary of the file:

        1. **Analyze Summaries**: Read and understand each summary to identify overlapping or unique details about the file's content.
        2. **Organize Key Points**: Group similar themes and critical aspects logically, ensuring they align with the file's purpose.
        3. **Merge and Simplify**: Write a unified summary that cohesively represents the file, using phrases like "This ${variable.file_type} file contains..." or "This ${variable.file_type} file represents...".
        4. **Refine the Overview**: Ensure the final summary is concise, clear, and provides an accurate representation of the file's key aspects.
        5. **Final Check**: Confirm the summary is between 5 to 10 sentences and effectively communicates the file's content.
      temperature: 0
      top-p: 0.95
    condition: ${chunk-text.output.chunk-num} > 1
output:
  summary_from_long_text:
    title: Summary from long text
    value: ${reduce.output.texts[0]}
  summary_from_short_text:
    title: Summary from short text
    value: ${map-chunks.output.result[0]}
